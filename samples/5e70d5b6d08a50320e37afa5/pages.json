[
    {
        "_id": {
            "$oid": "5e710b56dd421f55cbe28afa"
        },
        "app_id": "5e70d5b6d08a50320e37afa5",
        "contents": "<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <ul class=\"nav nav-tabs card-header-tabs\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" href=\"#\">Databases</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"card-body\">\r\n    <div class=\"list-group\">\r\n{{\r\n  var db_list = storage.get_database_list();\r\n  \r\n  if (db_list.length > 0) {\r\n    for (var i = 0; i < db_list.length; i++) {\r\n      var db_name = db_list[i];\r\n      \r\n      view.echo('<a class=\"list-group-item list-group-item-action\" href=\"/db/view/' + db_name + '\">' + db_name + '</a>');\r\n    }\r\n  } else {\r\n    view.echo('<div class=\"list-group-item\">No databases found</div>')\r\n  }\r\n}}\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card-footer\">\r\n    <form class=\"input-group\" id=\"useDatabaseForm\">\r\n      <input type=\"text\" id=\"databaseName\" class=\"form-control\" placeholder=\"Database name\" aria-label=\"Database name\" required>\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-primary\">Use</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n$('#useDatabaseForm').submit(function(event) {\r\n  event.preventDefault();\r\n  let databaseName = $(this).find('#databaseName').val();\r\n  if (databaseName != '') {\r\n    window.location = '/db/view/' + databaseName;\r\n  }\r\n});\r\n</script>",
        "name": "db_list"
    },
    {
        "_id": {
            "$oid": "5e710b5a66214ad4649420a5"
        },
        "app_id": "5e70d5b6d08a50320e37afa5",
        "contents": "<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <ul class=\"nav nav-tabs card-header-tabs\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/\">Databases</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" href=\"#\">{= db_name =}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"card-body\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        Collections\r\n      </div>\r\n      <div class=\"list-group list-group-flush\">\r\n{{\r\n  //const db_name = router.get_args()[0];\r\n  //const collection_list = storage.get_collection_list(db_name);\r\n  \r\n  if (collection_list.length > 0) {\r\n    for (var i = 0; i < collection_list.length; i++) {\r\n      const collection_name = collection_list[i];\r\n    \r\n      view.echo('<a class=\"list-group-item list-group-item-action\" href=\"/col/view/' + db_name + '/' + collection_name + '\">' + collection_name + '</a>');\r\n    }\r\n  } else {\r\n    view.echo('<div class=\"list-group-item\">No collections in this database</div>');\r\n  }\r\n}}\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <form class=\"input-group\" id=\"useCollectionForm\">\r\n          <input type=\"text\" id=\"collectionName\" class=\"form-control\" placeholder=\"Collection name\" aria-label=\"Collection name\" required>\r\n          <div class=\"input-group-append\">\r\n            <button class=\"btn btn-outline-primary\">Use</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"card-body\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        Manage {= db_name =}\r\n      </div>\r\n      <div class=\"list-group\">\r\n        <button id=\"exportDatabase\" class=\"list-group-item list-group-item-action\" type=\"button\">Export database</button>\r\n        {# <a href=\"#\" class=\"list-group-item list-group-item-action\">Clone database</a>\r\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Rename database</a>\r\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Change owner</a>\r\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Drop database</a> #}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n$('#useCollectionForm').submit(function(event) {\r\n  event.preventDefault();\r\n  let collectionName = $(this).find('#collectionName').val();\r\n  if (collectionName != '') {\r\n    window.location = '/col/view/{= db_name =}/' + collectionName;\r\n  }\r\n});\r\n\r\n\r\n$('#exportDatabase').click(function(event) {\r\n  event.preventDefault();\r\n  $.ajax({\r\n    url: '/db/export/{= db_name =}',\r\n    success: function(data) {\r\n      var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(data));\r\n      var downloadAnchorNode = document.createElement('a');\r\n      downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n      downloadAnchorNode.setAttribute(\"download\", \"vortex-exportDb-{= db_name =}.json\");\r\n      document.body.appendChild(downloadAnchorNode); // required for firefox\r\n      downloadAnchorNode.click();\r\n      downloadAnchorNode.remove();\r\n    }\r\n  });\r\n});\r\n</script>",
        "name": "collection_list"
    },
    {
        "_id": {
            "$oid": "5e710b60cd3d1c0d156cc3c2"
        },
        "app_id": "5e70d5b6d08a50320e37afa5",
        "contents": "<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <ul class=\"nav nav-tabs card-header-tabs\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/\">Databases</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/db/view/{= db_name =}\">{= db_name =}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" href=\"#\">{= collection_name =}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"card-body\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">All items</div>\r\n      <div class=\"card-body table-responsive\" id=\"table\">Loading...</div>\r\n      <div class=\"card-footer\">\r\n        <a href=\"/col/create/{= db_name + '/' + collection_name =}\" class=\"btn btn-success\">Create</a>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  {# <div class=\"card-body\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        Manage {= db_name + '::' + collection_name =}\r\n      </div>\r\n      <div class=\"list-group\">\r\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Clone collection</a>\r\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Rename collection</a>\r\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Change owner</a>\r\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Drop collection</a>\r\n      </div>\r\n    </div>\r\n  </div> #}\r\n\r\n  <div class=\"card-footer\">\r\n    \r\n  </div>\r\n</div>\r\n\r\n\r\n<style>\r\n.deltaTable td {\r\n  white-space: pre-wrap;\r\n}\r\n</style>\r\n<script>\r\n$.fn.deltaTable = function(data) {\r\n  var columns = {};\r\n  for (var i in data) {\r\n    var value = data[i];\r\n    for (var column in value) {\r\n      if (column != '_id') {\r\n        columns[column] = true;\r\n      }\r\n    }\r\n  }\r\n  this.css('padding', '0');\r\n  this.html(`<table class=\"table table-hover deltaTable\"><thead><tr><th></th></tr></thead><tbody></tbody></table>`);\r\n  var $theadRows = this.find('thead tr');\r\n  var $tbody = this.find('tbody');\r\n  \r\n  for (var column in columns) {\r\n    var tableColumn = $('<th></th>');\r\n    tableColumn.text(column);\r\n    $theadRows.append(tableColumn);\r\n  }\r\n  if (data.length == 0) {\r\n    var tableRow = $('<tr><td><i>No entries</i></td></tr>');\r\n    $tbody.append(tableRow);\r\n  }\r\n  for (var i in data) {\r\n    var tableRow = $('<tr><td>' + (data[i]['_id'] ? '<a class=\"btn btn-primary\" href=\"/col/edit/{= db_name + '/' + collection_name =}/' + data[i]['_id']['$oid'] + '\">Edit</a>' : '') + '</td></tr>');\r\n    for (var column in columns) {\r\n      var tableColumn = $('<td></td>');\r\n      if (typeof(data[i][column]) == 'undefined') {\r\n        tableColumn.html('<i>null</i>');\r\n      } else {\r\n        var columnContents = data[i][column];\r\n        if (columnContents.length > 64) {\r\n          columnContents = columnContents.substr(0, 64);\r\n          tableColumn.text(columnContents);\r\n          tableColumn.append('<br><i>...</i>');\r\n        } else {\r\n          tableColumn.text(columnContents);\r\n        }\r\n      }\r\n      tableRow.append(tableColumn);\r\n    }\r\n    $tbody.append(tableRow);\r\n  }\r\n};\r\n</script>\r\n\r\n    <script>\r\n    $.ajax({\r\n      url: '/col/find/{= db_name =}/{= collection_name =}',\r\n      success: function(data){\r\n        $('#table').deltaTable(data);\r\n      }\r\n    });\r\n    </script>",
        "name": "item_list"
    },
    {
        "_id": {
            "$oid": "5e710b6412fc263bf26d39e7"
        },
        "app_id": "5e70d5b6d08a50320e37afa5",
        "contents": "{{ \r\nconst primary = '#007bff';\r\n\r\n}}\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/ace.js\"></script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <ul class=\"nav nav-tabs card-header-tabs\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/\">Databases</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/db/view/{= db_name =}\">{= db_name =}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/col/view/{= db_name + '/' + collection_name =}\">{= collection_name =}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" href=\"#\">{= oid =}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div id=\"form\"><div class=\"p-4\">Loading...</div></div>\r\n</div>\r\n\r\n<style>\r\n  .delta-form-field {\r\n    border-bottom: solid 1px #ccc;\r\n    border-top: solid 1px #ccc;\r\n    border-radius: 4px;\r\n    margin-bottom: 16px;\r\n  }\r\n  .delta-form-field:first-child {\r\n    border-top: none;\r\n  }\r\n  .delta-form-add-field {\r\n    border-top: solid 1px #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  .delta-form-header {\r\n    border-bottom: solid #ddd 1px;\r\n    height: 38px;\r\n    display: table;\r\n    width: 100%;\r\n  }\r\n  .delta-form-header .left-button,\r\n  .delta-form-header .right-button {\r\n    height: 38px;\r\n    width: 38px;\r\n    background: none;\r\n    border: none;\r\n    color: #777;\r\n    display: table-cell;\r\n  }\r\n  .delta-form-header .delta-form-field-name {\r\n    width: auto;\r\n    display: inline-block;\r\n    color: #232323;\r\n    display: table-cell;\r\n    width: 100%;\r\n  }\r\n  .delta-form-field-input-name {\r\n    width: auto;\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 0 4px;\r\n    \r\n    border: none;\r\n    border-bottom: solid #ddd 1px;\r\n    transition: .4s;\r\n  }\r\n  .delta-form-field-input-name:focus {\r\n    outline: none;\r\n    border-bottom: {= primary =} solid 1px;\r\n    transition: .2s;\r\n  }\r\n  .switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 72px;\r\n    height: 28px;\r\n    margin: 0;\r\n  }\r\n  .switch input {\r\n    display: none;\r\n  }\r\n  .switch .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    border-radius: 28px;\r\n    background-color: #cacaca;\r\n    transition: .2s;\r\n  }\r\n  .switch .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 20px;\r\n    width: 20px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    border-radius: 50%;\r\n    background-color: white;\r\n    transition: .2s;\r\n  }\r\n  input:checked + .slider {\r\n    background-color: #2196f3;\r\n  }\r\n  input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n  input:checked + .slider:before {\r\n    transform: translateX(42px);\r\n  }\r\n  \r\n  .delta-form-input-field {\r\n    width: auto;\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 0 4px;\r\n    \r\n    border: none;\r\n    border-bottom: solid #ddd 1px;\r\n    transition: .4s;\r\n  }\r\n  .delta-form-input-field:focus {\r\n    outline: none;\r\n    border-bottom: {= primary =} solid 1px;\r\n    transition: .2s;\r\n  }\r\n</style>\r\n\r\n<script>\r\n(function($) {\r\n  $.fn.deltaForm = function(opts) {\r\n    var deltaForm = this;\r\n    deltaForm._id = '';\r\n    deltaForm._options = $.extend({\r\n      data: {}\r\n    }, opts);\r\n\r\n    this.html(`\r\n    <form class=\"delta-form\">\r\n      <div class=\"card-header\">\r\n        <span>Edit item</span>\r\n        <span class=\"float-right\">\r\n          <button type=\"submit\" class=\"btn btn-sm btn-success delta-form-submit\">\r\n            Save\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-sm btn-danger delta-form-delete\">\r\n            Delete\r\n          </button>\r\n        </span>\r\n      </div>\r\n      <div class=\"delta-form-fields field-object\"></div>\r\n\r\n      <button class=\"btn btn-block btn-primary delta-form-add-field-button\" type=\"button\">Add field</button>\r\n      \r\n      <div class=\"card-footer text-center\">\r\n          <button type=\"submit\" class=\"btn btn-success delta-form-submit\">\r\n            Save\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger delta-form-delete\">\r\n            Delete\r\n          </button>\r\n      </div>\r\n    </form>`);\r\n\r\n        // </span>\r\n        // <span class=\"float-right\">\r\n    this.$deltaForm = this.find('.delta-form');\r\n    this.$formFields = this.find('.delta-form-fields');\r\n    this.$addFieldButton = this.find('.delta-form-add-field-button');\r\n    \r\n    this.addField = function(fieldName = '', fieldValue = '') {\r\n      var fieldNode = $(`\r\n      <div class=\"delta-form-field\">\r\n        <div class=\"delta-form-header\">\r\n          <button class=\"left-button\" type=\"button\" tabindex=\"-1\">\r\n            <i class=\"fa fa-grip-vertical\"></i>\r\n          </button>\r\n\r\n          <div class=\"delta-form-field-name\">\r\n            <input class=\"delta-form-field-input-name\" placeholder=\"Field name\" required autofocus>\r\n          </div>\r\n\r\n          <span class=\"right-button\">\r\n              <div class=\"dropdown d-inline\">\r\n                <button class=\"right-button\" type=\"button\" tabindex=\"-1\" data-toggle=\"dropdown\">\r\n                  <i class=\"fas fa-ellipsis-v\"></i>\r\n                </button>\r\n\r\n                <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\r\n                  <h6 class=\"dropdown-header\">Type</h6>\r\n                  <button class=\"dropdown-item\" value=\"string\" type=\"button\">String</button>\r\n                  <button class=\"dropdown-item\" value=\"number\" type=\"button\">Number</button>\r\n                  <button class=\"dropdown-item\" value=\"json\" type=\"button\">JSON</button>\r\n                  <button class=\"dropdown-item\" value=\"boolean\" type=\"button\">Boolean</button>\r\n                  <button class=\"dropdown-item\" value=\"null\" type=\"button\">Null</button>\r\n                  <button class=\"dropdown-item\" value=\"code-html\" type=\"button\">HTML Code</button>\r\n                  <button class=\"dropdown-item\" value=\"code-js\" type=\"button\">JS Code</button>\r\n                  <button class=\"dropdown-item\" value=\"code-css\" type=\"button\">CSS Code</button>\r\n\r\n                  <div class=\"dropdown-divider\"></div>\r\n                  <button class=\"dropdown-item\" value=\"delete\" type=\"button\">Remove</button\r\n                </div>\r\n              </div>\r\n          </span>\r\n        </div>\r\n        <div class=\"delta-form-field-value\"></div>\r\n      </div>`);\r\n      fieldNode.find('.delta-form-field-input-name').val(fieldName);\r\n      \r\n      fieldNode.type = 'string';\r\n      \r\n      fieldNode.setBool = function(fieldValue) {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input boolean p-2\">\r\n            <label class=\"switch\">\r\n              <input type=\"checkbox\">\r\n              <span class=\"slider\"></span>\r\n            </label>\r\n          </div>`);\r\n        inputNode.find('input').prop('checked', fieldValue);\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'bool';\r\n      }\r\n      \r\n      fieldNode.getBool = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.boolean .switch input');\r\n        if (input) {\r\n          return input.prop('checked');\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      \r\n      fieldNode.setNumber = function(fieldValue) {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input number p-2\">\r\n            <input class=\"delta-form-input-field\" type=\"number\" placeholder=\"Value\">\r\n          </div>`);\r\n        inputNode.find('input').val(fieldValue);\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'number';\r\n      }\r\n      \r\n      fieldNode.getNumber = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.number input');\r\n        if (input) {\r\n          return input.val();\r\n        }\r\n        \r\n        return 0;\r\n      }\r\n      \r\n      fieldNode.setString = function(fieldValue) {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input string p-2\">\r\n            <input class=\"delta-form-input-field\" type=\"text\" placeholder=\"Value\">\r\n          </div>`);\r\n        inputNode.find('input').val(fieldValue);\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'string';\r\n      }\r\n      \r\n      fieldNode.getString = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.string input');\r\n        if (input) {\r\n          return input.val();\r\n        }\r\n        \r\n        return '';\r\n      }\r\n      \r\n      fieldNode.setNull = function() {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input null p-2\">\r\n            <i>Null</i>\r\n          </div>`);\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'null';\r\n      }\r\n      \r\n      fieldNode.setCode = function(fieldValue, mode) {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input code\" placeholder=\"Value\">\r\n            <div class=\"editor\"></div>\r\n          </div>`);\r\n        var editor = ace.edit($(inputNode.find('.editor'))[0]);\r\n        editor.setValue(fieldValue, -1);\r\n        editor.setTheme(\"ace/theme/chrome\");\r\n        if (mode) {\r\n          editor.session.setMode('ace/mode/' + mode);\r\n        }\r\n        editor.session.setTabSize(2);\r\n        editor.session.setUseSoftTabs(true);\r\n        editor.setBehavioursEnabled(false)\r\n        editor.setOptions({\r\n          maxLines: Infinity\r\n        });\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'code';\r\n      }\r\n      \r\n      fieldNode.getCode = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.code .editor');\r\n        if (input) {\r\n          return (ace.edit(input[0])).getValue();\r\n        }\r\n        \r\n        return '';\r\n      }\r\n      \r\n      fieldNode.setJson = function(fieldValue) {\r\n        var value = '';\r\n        try {\r\n          value = JSON.stringify(fieldValue, null, 2);\r\n        } catch (err) {\r\n          \r\n        }\r\n        \r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input json\" placeholder=\"Value\">\r\n            <div class=\"editor\"></div>\r\n          </div>`);\r\n        var editor = ace.edit($(inputNode.find('.editor'))[0]);\r\n        editor.setValue(value, -1);\r\n        editor.setTheme(\"ace/theme/chrome\");\r\n        editor.session.setMode('ace/mode/json');\r\n        editor.session.setTabSize(2);\r\n        editor.session.setUseSoftTabs(true);\r\n        editor.setBehavioursEnabled(false)\r\n        editor.setOptions({\r\n          maxLines: Infinity\r\n        });\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'json';\r\n      }\r\n      \r\n      fieldNode.getJson = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.json .editor');\r\n        if (input) {\r\n          return (ace.edit(input[0])).getValue();\r\n        }\r\n        \r\n        return '';\r\n      }\r\n      \r\n      fieldNode.getValue = function() {\r\n        switch (fieldNode.type) {\r\n          case 'bool':\r\n            return fieldNode.getBool();\r\n          case 'string':\r\n            return fieldNode.getString();\r\n          case 'code':\r\n            return fieldNode.getCode();\r\n          case 'json':\r\n            return fieldNode.getJson();\r\n          case 'number':\r\n            return fieldNode.getNumber();\r\n          case 'null':\r\n            return null;\r\n          default:\r\n            return '';\r\n        }\r\n      }\r\n      \r\n      switch (typeof(fieldValue)) {\r\n        case 'object':\r\n          fieldNode.setJson(fieldValue);\r\n          break;\r\n        case 'string':\r\n          var matchNewlines = /\\r|\\n/.exec(fieldValue);\r\n          if (!matchNewlines) {\r\n            fieldNode.setString(fieldValue);\r\n          } else {\r\n            fieldNode.setCode(fieldValue);\r\n          }\r\n          break;\r\n        case 'number':\r\n          fieldNode.setNumber(fieldValue);\r\n          break;\r\n        case 'boolean':\r\n          fieldNode.setBool(fieldValue);\r\n          break;\r\n        case null:\r\n          fieldValue.setNull();\r\n      }\r\n\r\n      fieldNode.find('.dropdown-menu .dropdown-item').click(function(event) {\r\n        var value = fieldNode.getValue();\r\n        switch(this.value) {\r\n          case 'delete':\r\n            fieldNode.remove();\r\n            break;\r\n          case 'string':\r\n            fieldNode.setString(value);\r\n            break;\r\n          case 'number':\r\n            fieldNode.setNumber(value);\r\n            break;\r\n          case 'json':\r\n            var val = {};\r\n            try {\r\n              val = JSON.parse(value);\r\n            } catch (err) {\r\n              \r\n            }\r\n            fieldNode.setJson(val);\r\n            break;\r\n          case 'boolean':\r\n            fieldNode.setBool(value);\r\n            break;\r\n          case 'null':\r\n            fieldNode.setNull();\r\n            break;\r\n          case 'code-html':\r\n            fieldNode.setCode(value, 'html');\r\n            break;\r\n          case 'code-js':\r\n            fieldNode.setCode(value, 'javascript');\r\n            break;\r\n          case 'code-css':\r\n            fieldNode.setCode(value, 'css');\r\n            break;\r\n        }\r\n      });\r\n\r\n      deltaForm.$formFields.append(fieldNode);\r\n    }\r\n\r\n    this.$addFieldButton.click(function(event) {\r\n      deltaForm.addField();\r\n    });\r\n\r\n    for (var column in deltaForm._options.data) {\r\n      var columnVal = deltaForm._options.data[column];\r\n      if (column == '_id') {\r\n        deltaForm._id = columnVal[\"$oid\"];\r\n      }\r\n      \r\n      deltaForm.addField(column, columnVal);\r\n    }\r\n\r\n    this.find('.delta-form-delete').click(function(event) {\r\n      if (confirm('Are you sure?')) {\r\n        $.ajax({\r\n          type: 'POST',\r\n          url: '/col/delete/{= db_name + '/' + collection_name =}/' + deltaForm._id,\r\n          data: JSON.stringify({}),\r\n          dataType: 'text',\r\n          success: function(res) {\r\n            var response = JSON.parse(res);\r\n            if (response.status == 'success'){\r\n              window.location.href = '/col/view/{= db_name + '/' + collection_name =}';\r\n            } else {\r\n              $('.delta-form-submit').text('Retry').removeAttr('disabled').addClass('btn-danger');\r\n            }\r\n          },\r\n          error: function (request, status, error) {\r\n            $('.delta-form-submit').text('Retry').removeAttr('disabled').addClass('btn-danger');\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.submitForm = function() {\r\n      var values = this._options.data;\r\n      deltaForm.$formFields.find('.delta-form-field').each(function(index, field) {\r\n        var fieldName = $(field).find('.delta-form-field-input-name').val();\r\n        var fieldInput = $(field).find('.delta-form-field-value-input');\r\n        if (fieldInput.hasClass('string')) {\r\n          values[fieldName] = fieldInput.find('input').val();\r\n        }\r\n        if (fieldInput.hasClass('boolean')) {\r\n          values[fieldName] = fieldInput.find('input').prop('checked');\r\n        }\r\n        if (fieldInput.hasClass('null')) {\r\n          values[fieldName] = null;\r\n        }\r\n        if (fieldInput.hasClass('code')) {\r\n          values[fieldName] = (ace.edit(fieldInput.find('.editor')[0])).getValue();\r\n        }\r\n        if (fieldInput.hasClass('number')) {\r\n          values[fieldName] = parseInt(fieldInput.find('input').val());\r\n        }\r\n        if (fieldInput.hasClass('json')) {\r\n          values[fieldName] = JSON.parse((ace.edit(fieldInput.find('.editor')[0])).getValue());\r\n        }\r\n      });\r\n\r\n      $('.delta-form-submit').text(\"Saving...\").attr(\"disabled\", true);\r\n      $('.delta-form-delete').attr(\"disabled\", true);\r\n\r\n      $.ajax({\r\n        type: 'POST',\r\n        url: '/col/update/{= db_name + '/' + collection_name =}/' + deltaForm._id,\r\n        data: JSON.stringify(values),\r\n        dataType: 'text',\r\n        success: function(res) {\r\n          var response = JSON.parse(res);\r\n          if (response.status == 'success') {\r\n            $('.delta-form-submit').text(\"Save\").removeClass('btn-danger');\r\n          } else {\r\n            $('.delta-form-submit').text('Retry').addClass('btn-danger');\r\n          }\r\n        },\r\n        error: function(request, status, error) {\r\n          $('.delta-form-submit').text('Retry').addClass('btn-danger');\r\n        },\r\n        complete: function() {\r\n          $('.delta-form-submit').removeAttr('disabled');\r\n          $('.delta-form-delete').removeAttr(\"disabled\");\r\n        }\r\n      });\r\n    }\r\n\r\n    deltaForm.$deltaForm.submit(function(event) {\r\n      event.preventDefault();\r\n      deltaForm.submitForm();\r\n    });\r\n\r\n\r\n    $(document).bind('keydown', function(e) {\r\n      if(e.ctrlKey && (e.which == 83)) {\r\n        e.preventDefault();\r\n        deltaForm.submitForm();\r\n        return false;\r\n      }\r\n    });\r\n\r\n    $(window).keypress(function(event) {\r\n      if (!(event.which == 115 && event.ctrlKey) && !(event.which == 19)) {\r\n        return true;\r\n      }\r\n      event.preventDefault();\r\n      deltaForm.submitForm();\r\n      return false;\r\n    });\r\n  }\r\n}(jQuery));\r\n</script>\r\n\r\n<script>\r\n$.ajax({\r\n  url: '/col/findOne/{= db_name + '/' + collection_name + '/' + oid =}',\r\n  success: function(data) {\r\n    $('#form').deltaForm({\r\n      data: data\r\n    });\r\n  }\r\n});\r\n</script>\r\n",
        "name": "edit_item"
    },
    {
        "_id": {
            "$oid": "5e711cbbcada83feae434496"
        },
        "app_id": "5e70d5b6d08a50320e37afa5",
        "contents": "{{ \r\nprimary = '#007bff';\r\n\r\n}}\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/ace.js\"></script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <ul class=\"nav nav-tabs card-header-tabs\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/\">Databases</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/db/view/{= db_name =}\">{= db_name =}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/col/view/{= db_name + '/' + collection_name =}\">{= collection_name =}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" href=\"#\">Create item</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  \r\n  <div id=\"form\"><div class=\"p-4\">Loading...</div></div>\r\n</div>\r\n\r\n<style>\r\n  .delta-form-field {\r\n    border-bottom: solid 1px #ccc;\r\n    border-top: solid 1px #ccc;\r\n    border-radius: 4px;\r\n    margin-bottom: 16px;\r\n  }\r\n  .delta-form-field:first-child {\r\n    border-top: none;\r\n  }\r\n  .delta-form-add-field {\r\n    border-top: solid 1px #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  .delta-form-header {\r\n    border-bottom: solid #ddd 1px;\r\n    height: 38px;\r\n    display: table;\r\n    width: 100%;\r\n  }\r\n  .delta-form-header .left-button,\r\n  .delta-form-header .right-button {\r\n    height: 38px;\r\n    width: 38px;\r\n    background: none;\r\n    border: none;\r\n    color: #777;\r\n    display: table-cell;\r\n  }\r\n  .delta-form-header .delta-form-field-name {\r\n    width: auto;\r\n    display: inline-block;\r\n    color: #232323;\r\n    display: table-cell;\r\n    width: 100%;\r\n  }\r\n  .delta-form-field-input-name {\r\n    width: auto;\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 0 4px;\r\n    \r\n    border: none;\r\n    border-bottom: solid #ddd 1px;\r\n    transition: .4s;\r\n  }\r\n  .delta-form-field-input-name:focus {\r\n    outline: none;\r\n    border-bottom: {= primary =} solid 1px;\r\n    transition: .2s;\r\n  }\r\n  .switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 72px;\r\n    height: 28px;\r\n    margin: 0;\r\n  }\r\n  .switch input {\r\n    display: none;\r\n  }\r\n  .switch .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    border-radius: 28px;\r\n    background-color: #cacaca;\r\n    transition: .2s;\r\n  }\r\n  .switch .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 20px;\r\n    width: 20px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    border-radius: 50%;\r\n    background-color: white;\r\n    transition: .2s;\r\n  }\r\n  input:checked + .slider {\r\n    background-color: #2196f3;\r\n  }\r\n  input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n  input:checked + .slider:before {\r\n    transform: translateX(42px);\r\n  }\r\n  \r\n  .delta-form-input-field {\r\n    width: auto;\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 0 4px;\r\n    \r\n    border: none;\r\n    border-bottom: solid #ddd 1px;\r\n    transition: .4s;\r\n  }\r\n  .delta-form-input-field:focus {\r\n    outline: none;\r\n    border-bottom: {= primary =} solid 1px;\r\n    transition: .2s;\r\n  }\r\n</style>\r\n\r\n<script>\r\n(function($) {\r\n  $.fn.deltaForm = function(opts) {\r\n    var deltaForm = this;\r\n    deltaForm._id = '';\r\n    deltaForm._options = $.extend({\r\n      data: {}\r\n    }, opts);\r\n\r\n    this.html(`\r\n    <form class=\"delta-form\">\r\n      <div class=\"card-header\">\r\n        <span>Edit item</span>\r\n        <span class=\"float-right\">\r\n          <button type=\"submit\" class=\"btn btn-sm btn-success delta-form-submit\">\r\n            Create\r\n          </button>\r\n        </span>\r\n      </div>\r\n      <div class=\"delta-form-fields field-object\"></div>\r\n\r\n      <button class=\"btn btn-block btn-primary delta-form-add-field-button\" type=\"button\">Add field</button>\r\n      \r\n      <div class=\"card-footer text-center\">\r\n          <button type=\"submit\" class=\"btn btn-success delta-form-submit\">\r\n            Create\r\n          </button>\r\n      </div>\r\n    </form>`);\r\n\r\n    this.$deltaForm = this.find('.delta-form');\r\n    this.$formFields = this.find('.delta-form-fields');\r\n    this.$addFieldButton = this.find('.delta-form-add-field-button');\r\n    \r\n    this.addField = function(fieldName = '', fieldValue = '') {\r\n      var fieldNode = $(`\r\n      <div class=\"delta-form-field\">\r\n        <div class=\"delta-form-header\">\r\n          <button class=\"left-button\" type=\"button\" tabindex=\"-1\">\r\n            <i class=\"fa fa-grip-vertical\"></i>\r\n          </button>\r\n\r\n          <div class=\"delta-form-field-name\">\r\n            <input class=\"delta-form-field-input-name\" placeholder=\"Field name\" required autofocus>\r\n          </div>\r\n\r\n          <span class=\"right-button\">\r\n              <div class=\"dropdown d-inline\">\r\n                <button class=\"right-button\" type=\"button\" tabindex=\"-1\" data-toggle=\"dropdown\">\r\n                  <i class=\"fas fa-ellipsis-v\"></i>\r\n                </button>\r\n\r\n                <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\r\n                  <h6 class=\"dropdown-header\">Type</h6>\r\n                  <button class=\"dropdown-item\" value=\"string\" type=\"button\">String</button>\r\n                  <button class=\"dropdown-item\" value=\"number\" type=\"button\">Number</button>\r\n                  <button class=\"dropdown-item\" value=\"json\" type=\"button\">JSON</button>\r\n                  <button class=\"dropdown-item\" value=\"boolean\" type=\"button\">Boolean</button>\r\n                  <button class=\"dropdown-item\" value=\"null\" type=\"button\">Null</button>\r\n                  <button class=\"dropdown-item\" value=\"code-html\" type=\"button\">HTML Code</button>\r\n                  <button class=\"dropdown-item\" value=\"code-js\" type=\"button\">JS Code</button>\r\n                  <button class=\"dropdown-item\" value=\"code-css\" type=\"button\">CSS Code</button>\r\n\r\n                  <div class=\"dropdown-divider\"></div>\r\n                  <button class=\"dropdown-item\" value=\"delete\" type=\"button\">Remove</button\r\n                </div>\r\n              </div>\r\n          </span>\r\n        </div>\r\n        <div class=\"delta-form-field-value\"></div>\r\n      </div>`);\r\n      fieldNode.find('.delta-form-field-input-name').val(fieldName);\r\n      \r\n      fieldNode.type = 'string';\r\n      \r\n      fieldNode.setBool = function(fieldValue) {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input boolean p-2\">\r\n            <label class=\"switch\">\r\n              <input type=\"checkbox\">\r\n              <span class=\"slider\"></span>\r\n            </label>\r\n          </div>`);\r\n        inputNode.find('input').prop('checked', fieldValue);\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'bool';\r\n      }\r\n      \r\n      fieldNode.getBool = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.boolean .switch input');\r\n        if (input) {\r\n          return input.prop('checked');\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      \r\n      fieldNode.setNumber = function(fieldValue) {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input number p-2\">\r\n            <input class=\"delta-form-input-field\" type=\"number\" placeholder=\"Value\">\r\n          </div>`);\r\n        inputNode.find('input').val(fieldValue);\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'number';\r\n      }\r\n      \r\n      fieldNode.getNumber = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.number input');\r\n        if (input) {\r\n          return input.val();\r\n        }\r\n        \r\n        return 0;\r\n      }\r\n      \r\n      fieldNode.setString = function(fieldValue) {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input string p-2\">\r\n            <input class=\"delta-form-input-field\" type=\"text\" placeholder=\"Value\">\r\n          </div>`);\r\n        inputNode.find('input').val(fieldValue);\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'string';\r\n      }\r\n      \r\n      fieldNode.getString = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.string input');\r\n        if (input) {\r\n          return input.val();\r\n        }\r\n        \r\n        return '';\r\n      }\r\n      \r\n      fieldNode.setNull = function() {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input null p-2\">\r\n            <i>Null</i>\r\n          </div>`);\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'null';\r\n      }\r\n      \r\n      fieldNode.setCode = function(fieldValue, mode) {\r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input code\" placeholder=\"Value\">\r\n            <div class=\"editor\"></div>\r\n          </div>`);\r\n        var editor = ace.edit($(inputNode.find('.editor'))[0]);\r\n        editor.setValue(fieldValue, -1);\r\n        editor.setTheme(\"ace/theme/chrome\");\r\n        if (mode) {\r\n          editor.session.setMode('ace/mode/' + mode);\r\n        }\r\n        editor.session.setTabSize(2);\r\n        editor.session.setUseSoftTabs(true);\r\n        editor.setBehavioursEnabled(false)\r\n        editor.setOptions({\r\n          maxLines: Infinity\r\n        });\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'code';\r\n      }\r\n      \r\n      fieldNode.getCode = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.code .editor');\r\n        if (input) {\r\n          return (ace.edit(input[0])).getValue();\r\n        }\r\n        \r\n        return '';\r\n      }\r\n      \r\n      fieldNode.setJson = function(fieldValue) {\r\n        var value = '';\r\n        try {\r\n          value = JSON.stringify(fieldValue, null, 2);\r\n        } catch (err) {\r\n          \r\n        }\r\n        \r\n        var inputNode = $(`\r\n          <div class=\"delta-form-field-value-input json\" placeholder=\"Value\">\r\n            <div class=\"editor\"></div>\r\n          </div>`);\r\n        var editor = ace.edit($(inputNode.find('.editor'))[0]);\r\n        editor.setValue(value, -1);\r\n        editor.setTheme(\"ace/theme/chrome\");\r\n        editor.session.setMode('ace/mode/json');\r\n        editor.session.setTabSize(2);\r\n        editor.session.setUseSoftTabs(true);\r\n        editor.setBehavioursEnabled(false)\r\n        editor.setOptions({\r\n          maxLines: Infinity\r\n        });\r\n        fieldNode.find('.delta-form-field-value').html(inputNode);\r\n        fieldNode.type = 'json';\r\n      }\r\n      \r\n      fieldNode.getJson = function() {\r\n        var input = fieldNode.find('.delta-form-field-value-input.json .editor');\r\n        if (input) {\r\n          return (ace.edit(input[0])).getValue();\r\n        }\r\n        \r\n        return '';\r\n      }\r\n      \r\n      fieldNode.getValue = function() {\r\n        switch (fieldNode.type) {\r\n          case 'bool':\r\n            return fieldNode.getBool();\r\n          case 'string':\r\n            return fieldNode.getString();\r\n          case 'code':\r\n            return fieldNode.getCode();\r\n          case 'json':\r\n            return fieldNode.getJson();\r\n          case 'number':\r\n            return fieldNode.getNumber();\r\n          case 'null':\r\n            return null;\r\n          default:\r\n            return '';\r\n        }\r\n      }\r\n      \r\n      switch (typeof(fieldValue)) {\r\n        case 'object':\r\n          fieldNode.setJson(fieldValue);\r\n          break;\r\n        case 'string':\r\n          var matchNewlines = /\\r|\\n/.exec(fieldValue);\r\n          if (!matchNewlines) {\r\n            fieldNode.setString(fieldValue);\r\n          } else {\r\n            fieldNode.setCode(fieldValue);\r\n          }\r\n          break;\r\n        case 'number':\r\n          fieldNode.setNumber(fieldValue);\r\n          break;\r\n        case 'boolean':\r\n          fieldNode.setBool(fieldValue);\r\n          break;\r\n        case null:\r\n          fieldValue.setNull();\r\n      }\r\n\r\n      fieldNode.find('.dropdown-menu .dropdown-item').click(function(event) {\r\n        var value = fieldNode.getValue();\r\n        switch(this.value) {\r\n          case 'delete':\r\n            fieldNode.remove();\r\n            break;\r\n          case 'string':\r\n            fieldNode.setString(value);\r\n            break;\r\n          case 'number':\r\n            fieldNode.setNumber(value);\r\n            break;\r\n          case 'json':\r\n            var val = {};\r\n            try {\r\n              val = JSON.parse(value);\r\n            } catch (err) {\r\n              \r\n            }\r\n            fieldNode.setJson(val);\r\n            break;\r\n          case 'boolean':\r\n            fieldNode.setBool(value);\r\n            break;\r\n          case 'null':\r\n            fieldNode.setNull();\r\n            break;\r\n          case 'code-html':\r\n            fieldNode.setCode(value, 'html');\r\n            break;\r\n          case 'code-js':\r\n            fieldNode.setCode(value, 'javascript');\r\n            break;\r\n          case 'code-css':\r\n            fieldNode.setCode(value, 'css');\r\n            break;\r\n        }\r\n      });\r\n\r\n      deltaForm.$formFields.append(fieldNode);\r\n    }\r\n\r\n    this.$addFieldButton.click(function(event) {\r\n      deltaForm.addField();\r\n    });\r\n    \r\n    function getNewObjectId() {\r\n      var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\r\n      return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\r\n          return (Math.random() * 16 | 0).toString(16);\r\n      }).toLowerCase();\r\n    }\r\n\r\n    deltaForm.addField('_id', {'$oid': getNewObjectId() });\r\n    deltaForm.addField();\r\n\r\n    for (var column in deltaForm._options.data) {\r\n      var columnVal = deltaForm._options.data[column];\r\n      if (column == '_id') {\r\n        deltaForm._id = columnVal[\"$oid\"];\r\n      }\r\n      \r\n      deltaForm.addField(column, columnVal);\r\n    }\r\n\r\n    this.submitForm = function() {\r\n      var values = {};\r\n      deltaForm.$formFields.find('.delta-form-field').each(function(index, field) {\r\n        var fieldName = $(field).find('.delta-form-field-input-name').val();\r\n        var fieldInput = $(field).find('.delta-form-field-value-input');\r\n        if (fieldInput.hasClass('string')) {\r\n          values[fieldName] = fieldInput.find('input').val();\r\n        }\r\n        if (fieldInput.hasClass('boolean')) {\r\n          values[fieldName] = fieldInput.find('input').prop('checked');\r\n        }\r\n        if (fieldInput.hasClass('null')) {\r\n          values[fieldName] = null;\r\n        }\r\n        if (fieldInput.hasClass('code')) {\r\n          values[fieldName] = (ace.edit(fieldInput.find('.editor')[0])).getValue();\r\n        }\r\n        if (fieldInput.hasClass('number')) {\r\n          values[fieldName] = parseInt(fieldInput.find('input').val());\r\n        }\r\n        if (fieldInput.hasClass('json')) {\r\n          values[fieldName] = JSON.parse((ace.edit(fieldInput.find('.editor')[0])).getValue());\r\n        }\r\n      });\r\n\r\n      $('.delta-form-submit').text(\"Saving...\").attr(\"disabled\", true);\r\n      $('.delta-form-delete').attr(\"disabled\", true);\r\n\r\n      $.ajax({\r\n        type: 'POST',\r\n        url: '/col/insert/{= db_name + '/' + collection_name =}',\r\n        data: JSON.stringify(values),\r\n        dataType: 'text',\r\n        success: function(res) {\r\n          var response = JSON.parse(res);\r\n          if (response.status == 'success') {\r\n            window.location = '/col/view/{= db_name + '/' + collection_name =}';\r\n          } else {\r\n            $('.delta-form-submit').text('Retry').addClass('btn-danger');\r\n          }\r\n        },\r\n        error: function(request, status, error) {\r\n          $('.delta-form-submit').text('Retry').addClass('btn-danger');\r\n        },\r\n        complete: function() {\r\n          $('.delta-form-submit').removeAttr('disabled');\r\n          $('.delta-form-delete').removeAttr(\"disabled\");\r\n        }\r\n      });\r\n    }\r\n\r\n    deltaForm.$deltaForm.submit(function(event) {\r\n      event.preventDefault();\r\n      deltaForm.submitForm();\r\n    });\r\n\r\n\r\n    $(document).bind('keydown', function(e) {\r\n      if(e.ctrlKey && (e.which == 83)) {\r\n        e.preventDefault();\r\n        deltaForm.submitForm();\r\n        return false;\r\n      }\r\n    });\r\n\r\n    $(window).keypress(function(event) {\r\n      if (!(event.which == 115 && event.ctrlKey) && !(event.which == 19)) {\r\n        return true;\r\n      }\r\n      event.preventDefault();\r\n      deltaForm.submitForm();\r\n      return false;\r\n    });\r\n  }\r\n}(jQuery));\r\n</script>\r\n\r\n\r\n<script>\r\n$('#form').deltaForm();\r\n</script>\r\n",
        "name": "create_item"
    },
    {
        "_id": {
            "$oid": "5e7cbad91024650fcad4e7b1"
        },
        "app_id": "5e70d5b6d08a50320e37afa5",
        "contents": "<div class=\"card\">\n  <div class=\"card-header\">\n    <ul class=\"nav nav-tabs card-header-tabs\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/\">Databases</a>\n      </li>\n    </ul>\n  </div>\n  \n  <div><div class=\"p-4\">Invalid request.</div></div>\n</div>\n",
        "name": "invalid_request"
    }
]